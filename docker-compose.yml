version: "3.9"

services:

  shop: &shop
    container_name: shop
    build:
      context: .
      dockerfile: ./docker/shop/Dockerfile
    networks:
      - net
      - db-to-shop
    depends_on:
      - dbshop
      - redis
    restart: on-failure
    expose:
      - 8000
    #    ports:
    #      - "8000:8000"
    volumes:
      - ./shop/:/usr/app
    environment:
      - CELERY_BROKER 'redis://redis:6379/0'
      - CELERY_BACKEND 'redis://redis:6379/0'


  celery:
    <<: *shop
    container_name: celery
    command: celery -A shop worker -B -l INFO
    environment:
      CELERY_BROKER: 'redis://redis:6379/0'
      CELERY_BACKEND: 'redis://redis:6379/0'
      WEB_HOST: 'shop'
      WEB_PORT: '8000'
    depends_on:
      - shop
      - redis
    networks:
      - net


  redis:
    image: redis:latest
    networks:
      - net
    expose:
      - 6379

  stockroom:
    container_name: stockroom
    build:
      context: .
      dockerfile: ./docker/stockroom/Dockerfile
    networks:
      - net
      - db-to-stock
    depends_on:
      - dbstock
    restart: on-failure
    expose:
      - 8001
    #    ports:
    #      - "8001:8001"
    volumes:
      - ./stockroom/:/usr/app



  nginx:
    container_name: nginx
    build:
      context: .
      dockerfile: ./docker/nginx/Dockerfile
    restart: on-failure
    networks:
      - net
    ports:
      - '80:80'
      - '8025:8025'
      - '81:81'
    depends_on:
      - shop
      - stockroom


  dbshop:
    container_name: dbshop
    image: postgres:latest
    volumes:
      - db_shop-vol:/var/lib/postgresql/data
    networks:
      - db-to-shop
    restart: on-failure
    expose:
      - 5432
    #    ports:
    #      - "5431:5432"
    environment:
      POSTGRES_USER: 'postgres'
      POSTGRES_PASSWORD: 'postgres'
      POSTGRES_DB: 'shop_db'

  dbstock:
    container_name: dbstock
    image: postgres:latest
    volumes:
      - db_stock-vol:/var/lib/postgresql/data
    networks:
      - db-to-stock
    restart: on-failure
    expose:
      - 5432
    #    ports:
    #      - "5433:5432"
    environment:
      POSTGRES_USER: 'postgres1'
      POSTGRES_PASSWORD: 'postgres1'
      POSTGRES_DB: 'stock_db'

  mailhog:
    image: mailhog/mailhog:latest
    restart: on-failure
    expose:
      - 8025
    networks:
      - net


networks:
  net:
  db-to-shop:
  db-to-stock:

volumes:
  db_shop-vol:
  db_stock-vol: